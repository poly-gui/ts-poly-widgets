// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

import { NanoBufReader, NanoBufWriter, type NanoPackMessage } from "nanopack"

class ListViewOperation implements NanoPackMessage {
	public static TYPE_ID = 3516816492

	constructor(public tag: number) {}

	public static fromBytes(
		bytes: Uint8Array,
	): { bytesRead: number; result: ListViewOperation } | null {
		const reader = new NanoBufReader(bytes)
		return ListViewOperation.fromReader(reader)
	}

	public static fromReader(
		reader: NanoBufReader,
	): { bytesRead: number; result: ListViewOperation } | null {
		let ptr = 8

		const tag = reader.readInt32(ptr)
		ptr += 4

		return { bytesRead: ptr, result: new ListViewOperation(tag) }
	}

	public get typeId(): number {
		return 3516816492
	}

	public bytes(): Uint8Array {
		const writer = new NanoBufWriter(8)
		writer.writeTypeId(3516816492)

		writer.appendInt32(this.tag)
		writer.writeFieldSize(0, 4)

		return writer.bytes
	}

	public bytesWithLengthPrefix(): Uint8Array {
		const writer = new NanoBufWriter(8 + 4, true)
		writer.writeTypeId(3516816492)

		writer.appendInt32(this.tag)
		writer.writeFieldSize(0, 4)

		writer.writeLengthPrefix(writer.currentSize - 4)

		return writer.bytes
	}
}

export { ListViewOperation }
