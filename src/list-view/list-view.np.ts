// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

import { NanoBufReader, NanoBufWriter } from "nanopack"

import { Widget } from "../widget/widget.np.js"

class ListView extends Widget {
	public static TYPE_ID = 2164488861

	constructor(
		public tag: number | null,
		public width: number,
		public height: number,
		public sectionCounts: number[],
		public renderItem: number,
	) {
		super(tag)
	}

	public static fromBytes(
		bytes: Uint8Array,
	): { bytesRead: number; result: ListView } | null {
		const reader = new NanoBufReader(bytes)
		return ListView.fromReader(reader)
	}

	public static fromReader(
		reader: NanoBufReader,
	): { bytesRead: number; result: ListView } | null {
		let ptr = 24

		let tag: number | null
		if (reader.readFieldSize(0) >= 0) {
			tag = reader.readInt32(ptr)
			ptr += 4
		} else {
			tag = null
		}

		const width = reader.readDouble(ptr)
		ptr += 8

		const height = reader.readDouble(ptr)
		ptr += 8

		const sectionCountsByteLength = reader.readFieldSize(3)
		const sectionCountsLength = sectionCountsByteLength / 4
		const sectionCounts: number[] = new Array(sectionCountsLength)
		for (let i = 0; i < sectionCountsLength; i++) {
			const iItem = reader.readInt32(ptr)
			ptr += 4
			sectionCounts[i] = iItem
		}

		const renderItem = reader.readInt32(ptr)
		ptr += 4

		return {
			bytesRead: ptr,
			result: new ListView(tag, width, height, sectionCounts, renderItem),
		}
	}

	public override get typeId(): number {
		return 2164488861
	}

	public override bytes(): Uint8Array {
		const writer = new NanoBufWriter(24)
		writer.writeTypeId(2164488861)

		if (this.tag) {
			writer.appendInt32(this.tag)
			writer.writeFieldSize(0, 4)
		} else {
			writer.writeFieldSize(0, -1)
		}

		writer.appendDouble(this.width)
		writer.writeFieldSize(1, 8)

		writer.appendDouble(this.height)
		writer.writeFieldSize(2, 8)

		writer.writeFieldSize(3, this.sectionCounts.length * 4)
		for (const sectionCounts of this.sectionCounts) {
			writer.appendInt32(sectionCounts)
		}

		writer.appendInt32(this.renderItem)
		writer.writeFieldSize(4, 4)

		return writer.bytes
	}

	public override bytesWithLengthPrefix(): Uint8Array {
		const writer = new NanoBufWriter(24 + 4, true)
		writer.writeTypeId(2164488861)

		if (this.tag) {
			writer.appendInt32(this.tag)
			writer.writeFieldSize(0, 4)
		} else {
			writer.writeFieldSize(0, -1)
		}

		writer.appendDouble(this.width)
		writer.writeFieldSize(1, 8)

		writer.appendDouble(this.height)
		writer.writeFieldSize(2, 8)

		writer.writeFieldSize(3, this.sectionCounts.length * 4)
		for (const sectionCounts of this.sectionCounts) {
			writer.appendInt32(sectionCounts)
		}

		writer.appendInt32(this.renderItem)
		writer.writeFieldSize(4, 4)

		writer.writeLengthPrefix(writer.currentSize - 4)

		return writer.bytes
	}
}

export { ListView }
